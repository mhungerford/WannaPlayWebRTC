#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long qw(:config require_order bundling);
use File::Basename;
use File::Spec::Functions qw(rel2abs);

my $port = 1234;
my $sdlpath = "libSDL2-2.0.so.0";
my $help = 0;
my $injectlib = dirname(__FILE__)."/sdlinject.so";

sub usage {
    print "Usage: $0 [OPTIONS] ./program --foo 42\n";
    print "Wrap a SDL program to inject events read from a UDP socket\n";
    print "\n";
    print "  -l, --lib LIBSDL    path or name to SDL lib to override (default $sdlpath)\n";
    print "  -i, --inject LIB    path to lib to inject (default $injectlib)\n";
    print "  -p, --port PORTNO   UDP port to listen on (default $port)\n";
    print "\n";
    if (@_) {
	exit shift();
    }
}

my $r = GetOptions("l|lib=s" => \$sdlpath,
		   "p|port=i" => \$port,
		   "i|inject=s" => \$injectlib,
		   "h|help" => \$help);

if (!$r || @ARGV == 0) {
    usage(1);
}

if ($help) {
    usage(0);
}


$injectlib = rel2abs($injectlib);
if (!-e $injectlib) {
    print STDERR "preload lib <$injectlib> doesn't exist\n";
    exit 1;
}

# TODO call ldd on prog to guess sdl lib?

$ENV{'REMOTEKB_PORT'} = $port;
$ENV{'REMOTEKB_LIBSDL_PATH'} = $sdlpath;
$ENV{'LD_PRELOAD'} = $injectlib;
return system @ARGV;
